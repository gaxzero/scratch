/*
 * This file was automatically generated by EvoSuite
 * Mon Jun 06 06:39:19 GMT 2016
 */

package org.collegeboard.challenge.guessnum;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.collegeboard.challenge.guessnum.Game;
import org.collegeboard.challenge.guessnum.Ui;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class Game_ESTest extends Game_ESTest_scaffolding {

  @Test
  public void test0()  throws Throwable  {
      Game game0 = new Game();
      game0.setInput((Ui) null);
      Ui ui0 = game0.getInput();
      assertNull(ui0);
  }

  @Test
  public void test1()  throws Throwable  {
      SystemInUtil.addInputLine("end");
      Game game0 = new Game();
      int iterrations = game0.play();
      assertEquals(1, iterrations);
  }

  @Test
  public void test2()  throws Throwable  {
      SystemInUtil.addInputLine("lower");
      Game game = new Game();
      // Undeclared exception!
      try { 
        game.play();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // java.io.IOException: Simulated exception in System.in
         //
         assertThrownBy("org.collegeboard.challenge.guessnum.Ui", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SystemInUtil.addInputLine("higher");
      Game game0 = new Game();
      // Undeclared exception!
      try { 
        game0.play();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // java.io.IOException: Simulated exception in System.in
         //
         assertThrownBy("org.collegeboard.challenge.guessnum.Ui", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Game game0 = new Game();
      SystemInUtil.addInputLine("yes");
      int int0 = game0.play();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Game game0 = new Game();
      int int0 = game0.play();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Game game0 = new Game();
      Ui ui0 = game0.getInput();
      assertNotNull(ui0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Game game0 = new Game();
      game0.setInput((Ui) null);
      // Undeclared exception!
      try { 
        game0.play();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.collegeboard.challenge.guessnum.Game", e);
      }
  }
}
